<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Funkynoob的个人博客 • Posts by &#34;web服务器&#34; category</title>
        <link>https://blog.riversea.top</link>
        <description>亿点点心得</description>
        <language>zh-CN</language>
        <pubDate>Tue, 23 Jan 2024 22:08:01 +0800</pubDate>
        <lastBuildDate>Tue, 23 Jan 2024 22:08:01 +0800</lastBuildDate>
        <category>docker</category>
        <category>Git</category>
        <category>Nginx</category>
        <category>ORM框架</category>
        <category>MyBatis</category>
        <category>redis</category>
        <category>spring</category>
        <item>
            <guid isPermalink="true">https://blog.riversea.top/2024/01/23/nginx/</guid>
            <title>Nginx</title>
            <link>https://blog.riversea.top/2024/01/23/nginx/</link>
            <category>Nginx</category>
            <pubDate>Tue, 23 Jan 2024 22:08:01 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;使用平台: CentOS7&lt;/p&gt;
&lt;p&gt;使用工具: VmWare17、xftp7、OpenSSH_for_Windows_8.1&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;img src=&#34;nginx.png&#34;/&gt;
&lt;h1 id=&#34;centos配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#centos配置&#34;&gt;#&lt;/a&gt; CentOS 配置&lt;/h1&gt;
&lt;h2 id=&#34;静态ip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态ip&#34;&gt;#&lt;/a&gt; 静态 IP&lt;/h2&gt;
&lt;h3 id=&#34;vware配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vware配置&#34;&gt;#&lt;/a&gt; VWare 配置&lt;/h3&gt;
&lt;p&gt;进入 Vmware，在最上方标签栏中找到 &lt;strong&gt;编辑 -&amp;gt; 虚拟网络编辑器&lt;/strong&gt;，进入网卡配置界面，如下图：&lt;/p&gt;
&lt;img src=&#34;IP1.png&#34; /&gt;
&lt;p&gt;点击更改设置标签，如下图：&lt;/p&gt;
&lt;img src=&#34;IP2.png&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;p&gt;首先选择 VMnet8 网卡，再点击&lt;strong&gt;下方 NAT 设置&lt;/strong&gt;，如下图：&lt;/p&gt;
&lt;img src=&#34;IP3.png&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;记住弹出对话框中的子网 IP、子网掩码、网关。随后启动虚拟机&lt;/p&gt;
&lt;h3 id=&#34;虚拟机设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机设置&#34;&gt;#&lt;/a&gt; 虚拟机设置&lt;/h3&gt;
&lt;p&gt;使用命令  &lt;code&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33&lt;/code&gt;  编辑 &lt;code&gt;ens33&lt;/code&gt;  网卡设置文件：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs properties&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;TYPE&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;Ethernet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;PROXY_METHOD&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;BROWSER_ONLY&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;BOOTPROTO&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;static #设置为静态IP，而不是dhcp动态分配&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;DEFROUTE&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV4_FAILURE_FATAL&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV6INIT&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV6_AUTOCONF&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV6_DEFROUTE&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV6_FAILURE_FATAL&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPV6_ADDR_GEN_MODE&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;stable-privacy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;NAME&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;ens33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;UUID&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;4565018e-6a54-4ffa-8ce2-802e725e46be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;DEVICE&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;ens33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ONBOOT&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;yes #系统启动时，是否启动该网卡&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;IPADDR&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;192.168.9.3 #IP地址，注意该地址必须为子网IP范围中的地址，即0~255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;GATEWAY&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;192.168.9.2 #网关，VmWare中设置的网关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;NETMASK&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;255.255.255.0 #子网掩码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;DNS1&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;8.8.8.8 #公网DNS服务器，可以配置多个，以DNS1，DNS2....排列&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编辑完成后，使用 &lt;code&gt;:&lt;/code&gt;  +  &lt;code&gt;wq&lt;/code&gt;  +  &lt;code&gt;回车&lt;/code&gt; 保存并退出。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;systemctl restart network&lt;/code&gt;  重启网络。&lt;/p&gt;
&lt;p&gt;尝试使用 &lt;code&gt;ping&lt;/code&gt;  或者  &lt;code&gt;curl&lt;/code&gt;  命令来判断配置是否成功，例如：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;ping www.baidu.com&lt;br&gt;curl www.baidu.com&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若使用 &lt;code&gt;ping&lt;/code&gt;  命令，出现下图，则代表网络畅通，配置成功：&lt;/p&gt;
&lt;img src=&#34;IP4.png&#34; /&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;注意：linux 的 ping 命令没有次数限制，需要使用 ctrl+c 来进行强制停止&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;若使用 &lt;code&gt;curl&lt;/code&gt;  命令，出现下图，则代表网络畅通，配置成功：&lt;/p&gt;
&lt;img src=&#34;IP4_1.png&#34; /&gt;
&lt;h3 id=&#34;配置yum镜像源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置yum镜像源&#34;&gt;#&lt;/a&gt; 配置 yum 镜像源&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;本文使用的是阿里云 yum 镜像源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先使用 &lt;code&gt;yum&lt;/code&gt;  命令下载 &lt;code&gt;wget&lt;/code&gt;  工具：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;yum install wget -y #y参数代表，询问用户是否同意时，一律选择同意&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着前往 &lt;code&gt;/etc/yum.repos.d&lt;/code&gt; ，备份所有仓库文件：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;cd /etc/yum.repos.d&lt;br&gt;mkdir backup #备份文件夹&lt;br&gt;mv *.repo backup&lt;br&gt;mv epel*.repo backup #若有epel仓库文件&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;随后拉取阿里云 yum 源镜像仓库：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;wget http://mirrors.aliyun.com/repo/Centos-7.repo&lt;br&gt;wget /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo #epel为为“红帽系”的操作系统提供额外的软件包&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;更新yum源&lt;/span&gt;&lt;br&gt;yum clean all&lt;br&gt;yum makecache&lt;br&gt;yum update&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;nginx学习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx学习&#34;&gt;#&lt;/a&gt; Nginx 学习&lt;/h1&gt;
&lt;h2 id=&#34;编译安装nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编译安装nginx&#34;&gt;#&lt;/a&gt; 编译安装 Nginx&lt;/h2&gt;
&lt;p&gt;前往官网下载 Nginx，&lt;a href=&#34;https://nginx.org/en/download.html&#34; title=&#34;下载Nginx&#34;&gt;Nginx 官网 ---- 下载&lt;/a&gt;，选择适合 Linux 操作系统平台的版本，点击下载，如下图：&lt;/p&gt;
&lt;img src=&#34;download.png&#34; /&gt;
&lt;p&gt;通过 &lt;code&gt;ftp&lt;/code&gt;  工具，将该文件上传至虚拟机中。&lt;/p&gt;
&lt;p&gt;首先将压缩包放在一边。编译安装 nginx 需要一些前置的环境：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;yum install gcc-c++ -y #g++编译器，编译c++&lt;br&gt;yum install pcre pcre-devel -y #Nginx的Rewrite模块和HTTP核心模块会使用到的PCRE正则表达式语法库&lt;br&gt;yum install zlib zlib-devel -y #zlib库提供了开发人员的压缩算法，在Nginx的各种模块中需要使用gzip压缩&lt;br&gt;yum install openssl openssl-devel -y #若要使用https，则需要安装 OpenSSL 库&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前置环境配置完成后，解压 Nginx 压缩包&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;tar -xzvf nginx-1.24.0.tar.gz&lt;br&gt;cd nginx-1.24.0&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解压缩后的文件目录如下图：&lt;/p&gt;
&lt;img src=&#34;nginx_compile_dir.png&#34; /&gt;
&lt;p&gt;其中 configure 即为我们需要的编译文件，执行以下命令进行编译：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./configure --prefix=/usr/local/nginx  --with-http_ssl_module #运行configure脚本&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;prefix即为安装后的路径，源文件一般放在usr/local路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--with-http_ssl_module，集成https模块&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解压成功后，会自动在当前目录生成 Makefile 文件：&lt;/p&gt;
&lt;img src=&#34;nginx_configure_down.png&#34; /&gt;
&lt;p&gt;随后执行如下命令进行编译安装：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;make &amp;amp;&amp;amp; make install&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;出现下图即代表安装完成：&lt;/p&gt;
&lt;img src=&#34;nginx_compile_install.png&#34; /&gt;
&lt;p&gt;随后即可以前往之前设定的目录 &lt;code&gt;/usr/local/nginx&lt;/code&gt;  查看安装完成的 Nginx。&lt;/p&gt;
&lt;h2 id=&#34;nginx目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx目录&#34;&gt;#&lt;/a&gt; Nginx 目录&lt;/h2&gt;
&lt;p&gt;Nginx 的目录如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;nginx&lt;br&gt;├── client_body_temp&lt;br&gt;├── conf #配置文件目录&lt;br&gt;│   ├── fastcgi.conf&lt;br&gt;│   ├── fastcgi.conf.default&lt;br&gt;│   ├── fastcgi_params&lt;br&gt;│   ├── fastcgi_params.default&lt;br&gt;│   ├── koi-utf&lt;br&gt;│   ├── koi-win&lt;br&gt;│   ├── mime.types&lt;br&gt;│   ├── mime.types.default&lt;br&gt;│   ├── nginx.conf #nginx的主配置文件，可在nginx.conf通过include包含其他配置文件&lt;br&gt;│   ├── nginx.conf.default&lt;br&gt;│   ├── scgi_params&lt;br&gt;│   ├── scgi_params.default&lt;br&gt;│   ├── uwsgi_params&lt;br&gt;│   ├── uwsgi_params.default&lt;br&gt;│   └── win-utf&lt;br&gt;├── fastcgi_temp&lt;br&gt;├── html #静态页面目录&lt;br&gt;│   ├── 50x.html&lt;br&gt;│   └── index.html&lt;br&gt;├── logs #日志文件目录&lt;br&gt;│   ├── access.log #成功日志文件&lt;br&gt;│   ├── error.log #错误日志文件&lt;br&gt;│   └── nginx.pid #nginx启动后会生成的文件，记录了nginx的PID号&lt;br&gt;├── proxy_temp&lt;br&gt;├── sbin #二进制文件目录&lt;br&gt;│   ├── nginx #控制nginx的二进制文件&lt;br&gt;│   └── nginx.old&lt;br&gt;├── scgi_temp&lt;br&gt;└── uwsgi_temp&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;nginx的常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的常用命令&#34;&gt;#&lt;/a&gt; Nginx 的常用命令&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./nginx start #启动Nginx&lt;br&gt;./nginx -s stop #暴力停止Nginx，不管是否还有任务&lt;br&gt;./nginx -s reload #重新加载配置文件，此时Nginx不在接受任何请求，直到配置文件重新加载完毕。&lt;br&gt;./nginx -s quit #优雅退出Nginx，此时Nginx不在接受任何请求，将未完成的任务完成后即退出&lt;br&gt;./nginx -s reopen #重新打开的日志文件和监听套接字&lt;br&gt;./nginx -t #测试配置文件是否配置正确&lt;br&gt;./nginx -h|? #查看帮助文档&lt;br&gt;./nginx -v #查看当前Nginx版本&lt;br&gt;./nginx -V #查看当前Nginx版本，执行configure时的配置&lt;br&gt;  -t            : test configuration and exit&lt;br&gt;  -T            : test configuration， dump it and exit&lt;br&gt;  -q            : suppress non-error messages during configuration testing&lt;br&gt;  -s signal     : send signal to a master process: stop， quit， reopen， reload&lt;br&gt;  -p prefix     : set prefix path (default: /usr/local/)&lt;br&gt;  -e filename   : set error log file (default: logs/error.log)&lt;br&gt;  -c filename   : set configuration file (default: conf/nginx.conf)&lt;br&gt;  -g directives : set global directives out of configuration file&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-s参数为向Master进程发送signal。 什么是master进程，后面再详解&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;尝试启动nginx服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尝试启动nginx服务&#34;&gt;#&lt;/a&gt; 尝试启动 Nginx 服务&lt;/h2&gt;
&lt;p&gt;执行以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./nginx start&lt;br&gt;firewall-cmd --zone=public --add-port=80/tcp --permanent #开启80端口，Nginx默认监听80端口&lt;br&gt;systemctl restart firewalld #重启防火墙&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;随后前往浏览器访问 &lt;code&gt;&amp;lt;你的虚拟机IP&amp;gt;:80&lt;/code&gt;  或者在虚拟机中输入 &lt;code&gt;curl localhost:80&lt;/code&gt; ，出现如下所示图片，即代表启动成功：&lt;/p&gt;
&lt;img src=&#34;nginx_start_url.png&#34; /&gt;
&lt;img src=&#34;nginx_start_curl.png&#34; /&gt;
&lt;h2 id=&#34;配置nginx为系统服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置nginx为系统服务&#34;&gt;#&lt;/a&gt; 配置 Nginx 为系统服务&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;vi&lt;/code&gt;  命令编辑，位于 &lt;code&gt;/lib/systemd/system&lt;/code&gt;  的  &lt;code&gt;nginx.service&lt;/code&gt;  文件：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;vi /lib/systemd/system/nginx.service&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入以下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs properties&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;[Unit]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;Description&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;nginx - high performance web server #该服务的描述&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;After&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;network.target remote-fs.target nss-lookup.target #在什么服务之后执行&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;[Service]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;Type&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;simple #启动方式，告诉Systemd什么时候服务启动完成&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;PIDFile&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/logs/nginx.pid #PID文件路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ExecStartPre&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/sbin/nginx -t -c /usr/local/conf/nginx.conf #start前执行什么&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ExecStart&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/sbin/nginx -c /usr/local/conf/nginx.conf #start执行命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ExecReload&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/sbin/nginx -s reload  #reload执行命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ExecQuit&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/sbin/nginx -s quit #quit执行命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;ExecStop&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;/usr/local/sbin/nginx -s stop #stop执行命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;PrivateTmp&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;true&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;[Install]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;WantedBy&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;multi-user.target&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编辑完成后，保存退出，重启 Systemd。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;systemctl daemon-reload&lt;br&gt;systemctl enable nginx #设置ngixn为开机自启服务&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;通过sytemctl控制nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过sytemctl控制nginx&#34;&gt;#&lt;/a&gt; 通过 sytemctl 控制 Nginx&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;systemctl start|reload|stop|quit nginx #同nginx的内部命令&lt;br&gt;systemctl status nginx #查看nginx现在的状态&lt;br&gt;journalctl -xe #查看systemd的日志&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 systemctl 启动 nginx，注意：启动前请停止之前启动过的 nginx。随后查看 nginx 的状态，如下图所示则启动成功。&lt;/p&gt;
&lt;img src=&#34;nginx_avtive.png&#34; /&gt;
&lt;p&gt;现在也可以在外部访问 nginx 服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Tip]&lt;/p&gt;
&lt;p&gt;若启动失败，尝试关闭 selinux。尝试运行命令： &lt;code&gt;setenforce 0&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;nginx的工作模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的工作模型&#34;&gt;#&lt;/a&gt; Nginx 的工作模型&lt;/h2&gt;
&lt;p&gt;如下图为 Nginx 的工作模型。启动 Nginx 后会启动两个进程：Master 和 Worker。Master 为主进程，用来管理 worker，Worker 是子进程，接受网络请求和响应。&lt;/p&gt;
&lt;p&gt;Master 启动时会读取配置文件并校验有无语法错误，随后开启子进程。&lt;/p&gt;
&lt;p&gt;当 Worker 收到请求后，会解析请求，读取配置文件进行路径映射，加载请求的资源。&lt;/p&gt;
&lt;img src=&#34;nginx_model.png&#34; /&gt;
&lt;h2 id=&#34;nginx配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx配置&#34;&gt;#&lt;/a&gt; Nginx 配置&lt;/h2&gt;
&lt;h3 id=&#34;nginx的最小配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的最小配置文件&#34;&gt;#&lt;/a&gt; Nginx 的最小配置文件&lt;/h3&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;worker_processes&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#工作进程数，一般设置为核数或CPU数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;events&lt;/span&gt; &amp;#123; &lt;span class=&#34;hljs-comment&#34;&gt;#事件驱动模块&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;worker_connections&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#每个工作进程的连接数&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;http&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;include&lt;/span&gt;       mime.types; &lt;span class=&#34;hljs-comment&#34;&gt;#include将其他的配置文件引入，mine.types保存着请求头Accept和请求的资源后缀的映射&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;default_type&lt;/span&gt;  application/octet-stream; &lt;span class=&#34;hljs-comment&#34;&gt;#默认的请求头Accept&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;sendfile&lt;/span&gt;        &lt;span class=&#34;hljs-literal&#34;&gt;on&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#数据零拷贝，见下图。&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;keepalive_timeout&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;65&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#长链接超时时间&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;#以下为虚拟主机vhost&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;server&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#监听端口&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt;  localhost; &lt;span class=&#34;hljs-comment&#34;&gt;#域名、主机名&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt;   html; &lt;span class=&#34;hljs-comment&#34;&gt;#设置主机站点的根目录地址&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt;  index.html index.htm;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;error_page&lt;/span&gt;   &lt;span class=&#34;hljs-number&#34;&gt;500&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;502&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;503&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;504&lt;/span&gt;  /50x.html; &lt;span class=&#34;hljs-comment&#34;&gt;# 服务器错误码为500 502 503 504，转到&amp;quot;域名/50x.html&amp;quot;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; = /50x.html &amp;#123; &lt;span class=&#34;hljs-comment&#34;&gt;#指定到html文件夹下找/50x.htm&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt;   html;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;sendfile&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sendfile&#34;&gt;#&lt;/a&gt; sendfile&lt;/h4&gt;
&lt;p&gt;开启 sendfile。nginx 将会向网络接口发送信号，让其读取文件，直接发送。&lt;/p&gt;
&lt;img src=&#34;nginx_sendfile.png&#34;/&gt;
&lt;hr&gt;
&lt;p&gt;关闭 sendfile。nginx 将会自己&lt;strong&gt;读取&lt;/strong&gt;磁盘文件，加载到应用程序的内存中，然后将文件&lt;strong&gt;发送&lt;/strong&gt;给网络接口，网络接口将文件返回。此过程将会有内核态和用户态之间的转换，降低性能。&lt;/p&gt;
&lt;img src=&#34;nginx_unsendfile.png&#34;/&gt;
&lt;h3 id=&#34;权限控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限控制&#34;&gt;#&lt;/a&gt; 权限控制&lt;/h3&gt;
&lt;p&gt;访问控制是网络安全防范和保护的主要策略，其任务是保证网络资源不被非法访问。 &lt;code&gt;Nginx&lt;/code&gt;  作为 &lt;code&gt;Web&lt;/code&gt;  服务器的后起之秀，也提供了访问控制的功能。它可以根据实际需求，对用户可以访问和禁止的目录进行限制。下面将对 &lt;code&gt;Nginx&lt;/code&gt;  提供的权限控制指令以及典型的应用进行详细讲解。&lt;/p&gt;
&lt;p&gt;Nginx 中提供了两个用于配置访问权限控制的指令，分别为 &lt;code&gt;allow&lt;/code&gt;  和 &lt;code&gt;deny&lt;/code&gt; 。从其名称就可以看出， &lt;code&gt;allow&lt;/code&gt;  用于设置允许访问的权限、 &lt;code&gt;deny&lt;/code&gt;  用于设置禁止访问的权限。在使用时，权限指令后只需跟上允许或禁止的 &lt;code&gt;IP&lt;/code&gt;  段或 &lt;code&gt;all&lt;/code&gt;  即可。其中， &lt;code&gt;all&lt;/code&gt;  表示所有的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;权限控制指令的使用虽然简单，但是在设置的过程中，还需要特别注意以下几个点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单个 &lt;code&gt;IP&lt;/code&gt;  指定作用范围最小， &lt;code&gt;all &lt;/code&gt; 指定作用范围最大。&lt;/li&gt;
&lt;li&gt;同一块下，若同时存在多个权限指令 ( &lt;code&gt;deny&lt;/code&gt; 、 &lt;code&gt;allow&lt;/code&gt; )，则先出现的访问权限设置生效，并且会对后出现的设置进行覆盖，未覆盖的范围依然生效，否则以先出现的设置为准。&lt;/li&gt;
&lt;li&gt;当多个块 (如 &lt;code&gt;http&lt;/code&gt; 、 &lt;code&gt;server&lt;/code&gt; 、 &lt;code&gt;location&lt;/code&gt; ) 中都出现了权限设置指令，则内层块中的权限级别要比外层块中设置的权限级别高。&lt;/li&gt;
&lt;li&gt;默认访问权限为： &lt;code&gt;allow all&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;拒绝或允许所有人&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拒绝或允许所有人&#34;&gt;#&lt;/a&gt; 拒绝或允许所有人&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; all &lt;span class=&#34;hljs-comment&#34;&gt;#所有人都可以访问，没有意义&lt;/span&gt;&lt;br&gt;deny all &lt;span class=&#34;hljs-comment&#34;&gt;#任何人都不能访问&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;注意， &lt;code&gt;deny all&lt;/code&gt;  将会把包括自己在内的访问者全部拒绝。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;允许指定用户访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#允许指定用户访问&#34;&gt;#&lt;/a&gt; 允许指定用户访问&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.3&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#允许192.168.78.128的IP访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;上述指令表示只允许 &lt;code&gt;192.168.9.3&lt;/code&gt;  客户端访问，其他所有客户端都不能访问。需要注意的是，若省略此处的 &lt;code&gt;deny all&lt;/code&gt; ，则会允许所有客户端访问；若将 &lt;code&gt;deny all&lt;/code&gt;  移动到 &lt;code&gt;allow 192.168.9.3&lt;/code&gt;  之后，则会阻止所有客户端访问。&lt;/p&gt;
&lt;p&gt;同一个块下的两个权限指令，先出现的设置会覆盖后出现的设置，使得 &lt;code&gt;allow 192.168.78.128&lt;/code&gt;  的配置优先生效；同时 &lt;code&gt;deny&lt;/code&gt;  指令设置的访问范围 &lt;code&gt;all&lt;/code&gt;  较大未被 &lt;code&gt;allow&lt;/code&gt;  覆盖的范围配置依然生效，达到除了 &lt;code&gt;IP&lt;/code&gt;  为 &lt;code&gt;192.168.78.128&lt;/code&gt;  的用户外，禁止其他用户对服务器访问的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;允许指定网段的用户访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#允许指定网段的用户访问&#34;&gt;#&lt;/a&gt; 允许指定网段的用户访问&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.0&lt;/span&gt;/&lt;span class=&#34;hljs-number&#34;&gt;24&lt;/span&gt;; &lt;span class=&#34;hljs-comment&#34;&gt;#允许192.168.9.1到192.168.9.255的IP访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;拒绝指定用户访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拒绝指定用户访问&#34;&gt;#&lt;/a&gt; 拒绝指定用户访问&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.4&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;#拒绝192.168.9.4的IP访问&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;拒绝指定网段用户访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拒绝指定网段用户访问&#34;&gt;#&lt;/a&gt; 拒绝指定网段用户访问&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.0&lt;/span&gt;/&lt;span class=&#34;hljs-number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;#拒绝192.168.9.1到192.168.9.255的IP访问&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;location模块&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#location模块&#34;&gt;#&lt;/a&gt; location 模块&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;location&lt;/code&gt;  块用于匹配 &lt;code&gt;URI&lt;/code&gt; ，同时进行一些访问控制、权限控制、负载均衡、反向代理等功能。&lt;/p&gt;
&lt;h4 id=&#34;location的匹配语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#location的匹配语法&#34;&gt;#&lt;/a&gt; location 的匹配语法&lt;/h4&gt;
&lt;p&gt;在此之前，首先要简单了解一下 location 的相关语法及规定，具体如下：&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; [=|~|~*|^~] URI &amp;#123;...&amp;#125; &lt;span class=&#34;hljs-comment&#34;&gt;#语法类型1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;@name&lt;/span&gt; &amp;#123;...&amp;#125; &lt;span class=&#34;hljs-comment&#34;&gt;#语法类型2&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;在上述语法中 =、~、~*、^~ 和 @都是 &lt;code&gt;location&lt;/code&gt;  用于实现访问控制的前缀，且在使用时只能选择一种，当然也可以不设置前缀。其中，关于 location 前缀的含义如下表所示。&lt;br&gt;
URI 表示 URL 地址中从域名到参数之间的部分， &lt;code&gt;&amp;#123;...&amp;#125;&lt;/code&gt;  表示指令块，用于满足 &lt;code&gt;location&lt;/code&gt;  匹配条件后需要执行的指令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;根据其后的指定模式进行精准匹配。例如，在访问时要与 &lt;code&gt;/html/aaa/index.html&lt;/code&gt;  完全一致才会执行其后的指令块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;使用正则表达式完成 &lt;code&gt;location&lt;/code&gt;  的匹配，区分大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~**&lt;/td&gt;
&lt;td&gt;使用正则表达式完成 &lt;code&gt;location&lt;/code&gt;  的匹配，不区分大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^~&lt;/td&gt;
&lt;td&gt;不使用正则表达式，完成以指定模式开头的 &lt;code&gt;location&lt;/code&gt;  匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;用于定义一个 &lt;code&gt;location&lt;/code&gt;  块，且该块不能被外部客户端所访问，只能被 Nginx 内部配置指令所访问&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;根据上表的描述可将 &lt;code&gt;location&lt;/code&gt;  根据不同前缀的使用方式，大致分为普通 &lt;code&gt;location&lt;/code&gt;  和正则 &lt;code&gt;location&lt;/code&gt; 。其中， &lt;code&gt;~&lt;/code&gt;  和 &lt;code&gt;~*&lt;/code&gt;  属于正则 &lt;code&gt;location&lt;/code&gt; ，其余的前缀和没有前缀的情况都属于普通 &lt;code&gt;location&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;精确匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#精确匹配&#34;&gt;#&lt;/a&gt; 精确匹配&lt;/h4&gt;
&lt;p&gt;所谓精准匹配指的就是用户访问的  &lt;code&gt;URI&lt;/code&gt;  与指定的 &lt;code&gt;URI&lt;/code&gt;  完全一致的情况，才会执行其后的指令块&lt;/p&gt;
&lt;p&gt;服务器位于 &lt;code&gt;192.168.9.5&lt;/code&gt; ，有 &lt;code&gt;192.168.9.3&lt;/code&gt;  和 &lt;code&gt;192.168.9.4&lt;/code&gt;  两个用户进行访问，示例配置如下：&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; localhost;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html index.htm;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; =/js &amp;#123;&lt;br&gt;		&lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.3&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; =/admin/auth&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.4&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;	&amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;响应结果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;192.168.9.3&lt;/th&gt;
&lt;th&gt;192.168.9.4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5&#34;&gt;http://192.168.9.5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/js&#34;&gt;http://192.168.9.5/js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;404 Not Found&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/admin/auth&#34;&gt;http://192.168.9.5/admin/auth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;td&gt;404 Not Found&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/admin&#34;&gt;http://192.168.9.5/admin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;td&gt;403 Forbidden&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;正则匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正则匹配&#34;&gt;#&lt;/a&gt; 正则匹配&lt;/h4&gt;
&lt;p&gt;Nginx 配置文件中，多个正则 &lt;code&gt;location&lt;/code&gt;  之间按照正则 &lt;code&gt;location&lt;/code&gt;  在配置文件中的书写顺序进行匹配，且只要匹配成功就不会继续匹配后面定义的正则 &lt;code&gt;location&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; ~\.html$ &amp;#123;&lt;br&gt;	&lt;span class=&#34;hljs-attribute&#34;&gt;allow&lt;/span&gt; all;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; ~^/aaa/.*\.html$&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;deny&lt;/span&gt; all;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;响应结果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;响应结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/test.html&#34;&gt;http://192.168.9.5/test.html&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;404 Not Found (匹配了第 1 行 location)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/aaa/test.html&#34;&gt;http://192.168.9.5/aaa/test.html&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;404 Not Found (匹配了第 1 行 location)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Tip]&lt;/p&gt;
&lt;p&gt;精确匹配和 &lt;code&gt;^~&lt;/code&gt;  匹配会禁用正则匹配&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;最大前缀匹配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最大前缀匹配&#34;&gt;#&lt;/a&gt; 最大前缀匹配&lt;/h4&gt;
&lt;p&gt;由于 &lt;code&gt;location&lt;/code&gt;  可以同时定义多个，当一个配置文件中同时出现多个 &lt;code&gt;location&lt;/code&gt;  时，普通 &lt;code&gt;location&lt;/code&gt;  之间遵循&lt;strong&gt;最大前缀匹配&lt;/strong&gt;原则。通俗地讲就是，匹配度最高的 &lt;code&gt;location&lt;/code&gt;  将会执行。&lt;/p&gt;
&lt;p&gt;示例如下：&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; /ng.test [&lt;br&gt;	allow all;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; /ng.test/log [&lt;br&gt;	deny all;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;响应结果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;响应结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/ng.test/data&#34;&gt;http://192.168.9.5/ng.test/data&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;404 Not Found (匹配了第 1 行 location)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/ng.test/log&#34;&gt;http://192.168.9.5/ng.test/log&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;403 Forbidden (匹配了第 4 行 location)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://192.168.9.5/ng.test/log/data&#34;&gt;http://192.168.9.5/ng.test/log/data&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;403 Forbidden (匹配了第 4 行 location)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Tip]&lt;/p&gt;
&lt;p&gt;&lt;code&gt;location \ &amp;#123;...&amp;#125;&lt;/code&gt; ：遵守普通 location 的最大前缀匹配，由于任何 URI 都必然以 **/** 根开头，所以对于一个 URI, 若配置文件中有更合适的匹配则会将其替代，否则返回 &lt;code&gt;location \ &amp;#123;...&amp;#125;&lt;/code&gt;  匹配到的结果，它相当于站点默认配置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;location =\ &amp;#123;...&amp;#125;&lt;/code&gt; ：遵守的是精准匹配，也就是只能匹配该站点根目录，同时会禁止继续搜索正则 &lt;code&gt;location&lt;/code&gt; , 效率比 &lt;code&gt;location \ &amp;#123;...&amp;#125;&lt;/code&gt;  要高。&lt;/p&gt;
&lt;p&gt;因此，若在开发中能确定精准匹配的情况，可以采用 &lt;code&gt;location =\ &amp;#123;...&amp;#125;&lt;/code&gt;  的方式，提升匹配效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;当多种类型的 location 匹配同时出现时；最终执行结果为： &lt;code&gt;=&lt;/code&gt;  匹配 &amp;gt;  &lt;code&gt;^~&lt;/code&gt;  匹配 &amp;gt; 正则匹配 &amp;gt; 普通的最大前缀匹配&lt;/p&gt;
&lt;p&gt;只要优先的 &lt;code&gt;location&lt;/code&gt;  匹配成功，就不会执行其他的 &lt;code&gt;location&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;虚拟主机配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟主机配置&#34;&gt;#&lt;/a&gt; 虚拟主机配置&lt;/h2&gt;
&lt;p&gt;虚拟主机为配置文件中的 &lt;code&gt;server&lt;/code&gt;  块。匹配到第一个&lt;strong&gt;虚拟主机&lt;/strong&gt;，则停止匹配。&lt;/p&gt;
&lt;h3 id=&#34;基于端口的虚拟主机配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于端口的虚拟主机配置&#34;&gt;#&lt;/a&gt; 基于端口的虚拟主机配置&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;nginx.conf&lt;/code&gt;  添加如下配置：&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;81&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/www;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;82&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/vod;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新加载 nginx 主配置文件。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;systemctl reload nginx&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;端口没有打开的情况&lt;/span&gt;&lt;br&gt;firewall-cmd --zone=public --add-port=81/tcp --permanent&lt;br&gt;firewall-cmd --zone=public --add-port=82/tcp --permanent&lt;br&gt;systemctl restart firewalld&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新访问即可进入不同的页面。&lt;/p&gt;
&lt;h3 id=&#34;基于server_name的虚拟主机配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于server_name的虚拟主机配置&#34;&gt;#&lt;/a&gt; 基于 server_name 的虚拟主机配置&lt;/h3&gt;
&lt;p&gt;server_name 的匹配顺序为：&lt;strong&gt;准确&lt;/strong&gt; &amp;gt; &lt;strong&gt;开头通配符&lt;/strong&gt; &amp;gt; &lt;strong&gt;结尾通配符&lt;/strong&gt; &amp;gt; &lt;strong&gt;正则表达式&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;准确&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准确&#34;&gt;#&lt;/a&gt; 准确&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; www.&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;.com;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/www;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; www.&lt;span class=&#34;hljs-number&#34;&gt;1234&lt;/span&gt;.com;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/vod;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;开头通配符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开头通配符&#34;&gt;#&lt;/a&gt; 开头通配符&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; *.&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;.com;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/www;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;结尾通配符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结尾通配符&#34;&gt;#&lt;/a&gt; 结尾通配符&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; www.&lt;span class=&#34;hljs-number&#34;&gt;123&lt;/span&gt;.*;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/www;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;正则表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正则表达式&#34;&gt;#&lt;/a&gt; 正则表达式&lt;/h4&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;server&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt; ~^w&amp;#123;3&amp;#125;\.123.com;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;root&lt;/span&gt; html/www;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;index&lt;/span&gt; index.html;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# ~代表开启正则表达式匹配，不属于正则表达式的内容&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理&#34;&gt;#&lt;/a&gt; 代理&lt;/h2&gt;
&lt;p&gt;如果两方无法正常通信。那么可以使用 &lt;strong&gt;代理&lt;/strong&gt;，通过访问代理服务器，让代理服务器去访问之前无法访问的主机。&lt;/p&gt;
&lt;h3 id=&#34;正向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正向代理&#34;&gt;#&lt;/a&gt; 正向代理&lt;/h3&gt;
&lt;p&gt;正向代理可以理解为「客户端」的代理，即客户端主动提供代理服务，客户端知道代理服务器的存在。&lt;/p&gt;
&lt;img src=&#34;proxy_positive.png&#34;/&gt;
&lt;h3 id=&#34;反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反向代理&#34;&gt;#&lt;/a&gt; 反向代理&lt;/h3&gt;
&lt;p&gt;反向代理可以理解为「服务器」的代理，即服务器端主动提供代理服务，客户端不知道代理服务器的存在。&lt;/p&gt;
&lt;img src=&#34;proxy_negative.png&#34;/&gt;
&lt;h4 id=&#34;nginx反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx反向代理&#34;&gt;#&lt;/a&gt; Nginx 反向代理&lt;/h4&gt;
&lt;p&gt;如下图所示， &lt;code&gt;Nginx&lt;/code&gt;  服务器接入公网，可以被外界访问，真正的业务服务器，外界无法访问。业务服务器的进出都要通过 &lt;code&gt;Nginx&lt;/code&gt;  服务器，如果 &lt;code&gt;Nginx&lt;/code&gt;  服务器的带宽不够高，将导致性能瓶颈。此谓， &lt;code&gt;Nginx&lt;/code&gt;  代理的隧道模型&lt;/p&gt;
&lt;img src=&#34;nginx_proxy_tunnel.png&#34;/&gt;
&lt;blockquote&gt;
&lt;p&gt;另一种模型为 &lt;code&gt;DR&lt;/code&gt;  模型，进则经过代理服务器，出则直接通向网关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nignx 的反向代理通过关键字「 &lt;code&gt;proxy_pass&lt;/code&gt; 」实现。「 &lt;code&gt;proxy_pass&lt;/code&gt; 」要在 &lt;code&gt;location&lt;/code&gt;  块中使用。如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;server&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt;  localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;proxy_pass&lt;/span&gt; http://www.bilibili.com &lt;span class=&#34;hljs-comment&#34;&gt;#注意，必须带有协议。&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#root   html;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#index  index.html index.htm;&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;可能出现： &lt;code&gt;proxy_pass&lt;/code&gt;  中的域名，如果去掉二级域名，可能会导致重定向。此时并不是反向代理未成功。而是因为网站设计人员可能会让无 &lt;code&gt;www&lt;/code&gt;  二级域名的请求重定向至含有 &lt;code&gt;www&lt;/code&gt;  二级域名的网址。&lt;/p&gt;
&lt;p&gt;同时，若访问的请求是 http 协议，那么也可能发生重定向。重定向至 https 协议。原因也是网站设计带来的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;额外的参数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;proxy_set_header&lt;/td&gt;
&lt;td&gt;在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy_connect_timeout&lt;/td&gt;
&lt;td&gt;配置 Nginx 与后端代理服务器尝试建立连接的超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy_read_timeout&lt;/td&gt;
&lt;td&gt;配置 Nginx 向后端服务器组发出 read 请求后，等待响应的超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy_send_timeout&lt;/td&gt;
&lt;td&gt;配置 Nginx 向后端服务器组发出 write 请求后，等待响应的超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy_redirect&lt;/td&gt;
&lt;td&gt;用于修改后端服务器返回的响应头中的 Location 和 Refresh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;负载均衡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#负载均衡&#34;&gt;#&lt;/a&gt; 负载均衡&lt;/h2&gt;
&lt;p&gt;把请求，按照一定算法规则，分配给多台业务服务器（即使其中一个坏了 / 维护升级，还有其他服务器可以继续提供服务）。&lt;/p&gt;
&lt;img src=&#34;load_balance.png&#34; /&gt;
&lt;p&gt;Nginx 的负载均衡通过， &lt;code&gt;upstream&lt;/code&gt;  和 &lt;code&gt;proxy_pass&lt;/code&gt;  配合使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;注意， &lt;code&gt;upstream&lt;/code&gt;  和 &lt;code&gt;server&lt;/code&gt;  一个级别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;轮询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#轮询&#34;&gt;#&lt;/a&gt; 轮询&lt;/h3&gt;
&lt;p&gt;雨露均沾，所有配置的服务器轮换着被访问。&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;upstream&lt;/span&gt; httpd&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.4:80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.5:80&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;server&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt;  localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;proxy_pass&lt;/span&gt; http://httpd;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#root   html;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#index  index.html index.htm;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;轮询为 &lt;code&gt;Nginx&lt;/code&gt;  的默认负载均衡策略&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;upstream&lt;/code&gt;  有如下常用状态参数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;指令&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fail_timeout&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;与 max_fails 结合使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;max_fails&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;设置在 fail_timeout 参数设置的时间内最大失败次数，如果在这个时间内，所有针对该服务器的请求都失败了，那么认为该服务器会被认为是停机了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fail_time&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;服务器会被认为停机的时间长度，默认为 10s。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;backup&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;标记该服务器为备用服务器。当主服务器停止时，请求会被发送到它这里。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;down&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;标记服务器永久停机了。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在轮询中，如果服务器 down 掉了，会自动剔除该服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺省配置就是轮询策略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此策略适合服务器配置相当，&lt;strong&gt;无状态&lt;/strong&gt;且短平快的服务使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;加权轮询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加权轮询&#34;&gt;#&lt;/a&gt; 加权轮询&lt;/h4&gt;
&lt;p&gt;通过 &lt;code&gt;weight&lt;/code&gt;  实现，权重大的访问会更多。&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;upstream&lt;/span&gt; httpd&amp;#123; &lt;span class=&#34;hljs-comment&#34;&gt;#httpd为别名&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.4:80&lt;/span&gt; weight=&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.5:80&lt;/span&gt; weight=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;server&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt;  localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;proxy_pass&lt;/span&gt; http://httpd;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#root   html;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#index  index.html index.htm;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Tip]&lt;/p&gt;
&lt;p&gt;轮询是一种无状态的轮询策略，无法保证 &lt;code&gt;session&lt;/code&gt;  一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ip_hash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip_hash&#34;&gt;#&lt;/a&gt; ip_hash&lt;/h3&gt;
&lt;p&gt;同一个来源的 &lt;code&gt;IP&lt;/code&gt;  指向一个服务器。&lt;/p&gt;
&lt;figure class=&#34;highlight nginx&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nginx&#34;&gt;&lt;span class=&#34;hljs-section&#34;&gt;upstream&lt;/span&gt; httpd&amp;#123;&lt;br&gt;    ip_hash; &lt;span class=&#34;hljs-comment&#34;&gt;#指明使用ip_hash方式&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.4:80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168.9.5:80&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-section&#34;&gt;server&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;hljs-number&#34;&gt;80&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-attribute&#34;&gt;server_name&lt;/span&gt;  localhost;&lt;br&gt;    &lt;span class=&#34;hljs-section&#34;&gt;location&lt;/span&gt; / &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-attribute&#34;&gt;proxy_pass&lt;/span&gt; http://httpd;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#root   html;&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;#index  index.html index.htm;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Note]&lt;/p&gt;
&lt;p&gt;需要注意的是，在使用 &lt;code&gt;ip_hash&lt;/code&gt;  方式处理负载均衡时，Web 服务器在负载均衡列表中的状态不能使用 &lt;code&gt;weight&lt;/code&gt;  和 &lt;code&gt;backup&lt;/code&gt;  设置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!Tip]&lt;/p&gt;
&lt;p&gt;值得一提的是，由于 &lt;code&gt;ip_hash&lt;/code&gt;  方式为每一个用户 &lt;code&gt;IP&lt;/code&gt;  绑定了一个 &lt;code&gt;Web&lt;/code&gt;  服务器处理，将会导致某些 &lt;code&gt;Web&lt;/code&gt;  服务器接收的请求多，某些 &lt;code&gt;Web&lt;/code&gt;  服务器接到的请求少，无法保证 &lt;code&gt;Web&lt;/code&gt;  服务器的负载均衡。因此，建议只在必要的情况下使用这种方式。同时， &lt;code&gt;ip_hash&lt;/code&gt;  可以用来处理有状态的请求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;url_hash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url_hash&#34;&gt;#&lt;/a&gt; url_hash&lt;/h3&gt;
&lt;p&gt;同一个来源的 &lt;code&gt;URL&lt;/code&gt;  指向一个服务器。&lt;/p&gt;
&lt;h3 id=&#34;leat_connection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#leat_connection&#34;&gt;#&lt;/a&gt; leat_connection&lt;/h3&gt;
&lt;p&gt;把请求转发给连接数较少的后端服务器。需要第三方的组件&lt;/p&gt;
&lt;h3 id=&#34;fair&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fair&#34;&gt;#&lt;/a&gt; fair&lt;/h3&gt;
&lt;p&gt;根据后端服务器相应时间进行分配。需要第三方的组件。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
